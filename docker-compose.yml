version: '3'

networks:
  vgs-gdpr:

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: ${PROJECT_NAME}-nginx
    ports:
      - "8082:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - postgres
    networks:
      - vgs-gdpr

  postgres:
    image: postgres:13.1-alpine
    container_name: ${PROJECT_NAME}-postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5872:5432"
    networks:
      - vgs-gdpr

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${PROJECT_NAME}-php
    volumes:
      - ./src:/var/www/html:delegated
    ports:
      - "9000:9000"
    networks:
      - vgs-gdpr

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: ${PROJECT_NAME}-composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - vgs-gdpr
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:14-bullseye
    container_name: ${PROJECT_NAME}-npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${PROJECT_NAME}-artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - postgres
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - vgs-gdpr
